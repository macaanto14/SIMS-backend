{
  "openapi": "3.0.0",
  "info": {
    "title": "SIMS Backend API",
    "version": "2.0.0",
    "description": "School Information Management System - Complete Backend API"
  },
  "paths": {
    "/api/v1/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user account with email verification.\n\n**Rate Limiting:** 5 requests per 15 minutes per IP\n\n**Validation Rules:**\n- Email must be valid and unique\n- Password must be at least 8 characters with uppercase, lowercase, number, and special character\n- First name and last name are required\n- Phone number must be valid format\n",
        "tags": [
          "Authentication"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password",
                  "first_name",
                  "last_name"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "john.doe@school.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "description": "Strong password with mixed case, numbers, and symbols",
                    "example": "SecurePass123!"
                  },
                  "first_name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50,
                    "description": "User's first name",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50,
                    "description": "User's last name",
                    "example": "Doe"
                  },
                  "phone": {
                    "type": "string",
                    "pattern": "^[+]?[1-9]\\d{1,14}$",
                    "description": "Phone number in international format",
                    "example": 1234567890
                  },
                  "school_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Optional school ID for automatic role assignment",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/User"
                            },
                            "token": {
                              "type": "string",
                              "description": "JWT authentication token",
                              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "message": "User registered successfully",
                  "data": {
                    "user": {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "email": "john.doe@school.com",
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": 1234567890,
                      "isActive": true,
                      "createdAt": "2024-01-15T10:30:00Z",
                      "roles": []
                    },
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  },
                  "requestId": "req_123456789",
                  "timestamp": "2024-01-15T10:30:00Z"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "error": "User already exists with this email",
                  "code": "DUPLICATE_USER",
                  "requestId": "req_123456789",
                  "timestamp": "2024-01-15T10:30:00Z"
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/RateLimitError"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "summary": "Authenticate user",
        "description": "Authenticates a user with email and password, returning a JWT token.\n\n**Features:**\n- Automatic session management\n- Login attempt tracking\n- Account lockout protection\n- Multi-device support\n\n**Rate Limiting:** 5 attempts per 15 minutes per IP\n",
        "tags": [
          "Authentication"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "john.doe@school.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "SecurePass123!"
                  },
                  "remember_me": {
                    "type": "boolean",
                    "description": "Extend token expiration time",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "allOf": [
                                {
                                  "$ref": "#/components/schemas/User"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "lastLoginAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Last login timestamp"
                                    }
                                  }
                                }
                              ]
                            },
                            "token": {
                              "type": "string",
                              "description": "JWT authentication token"
                            },
                            "expiresAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Token expiration time"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials or account deactivated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "invalid_credentials": {
                    "summary": "Invalid email or password",
                    "value": {
                      "success": false,
                      "error": "Invalid credentials",
                      "code": "INVALID_CREDENTIALS"
                    }
                  },
                  "account_deactivated": {
                    "summary": "Account is deactivated",
                    "value": {
                      "success": false,
                      "error": "Account is deactivated",
                      "code": "ACCOUNT_DEACTIVATED"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/RateLimitError"
          }
        }
      }
    },
    "/api/v1/auth/profile": {
      "get": {
        "summary": "Get current user profile",
        "description": "Retrieves the authenticated user's profile information including roles and permissions.\n\n**Caching:** Response is cached for 5 minutes to improve performance\n",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/User"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "lastLoginAt": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "recentActivity": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "action": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "metadata": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "summary": "Refresh authentication token",
        "description": "Generates a new JWT token using the current valid token.\nUseful for extending session without re-authentication.\n",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string",
                              "description": "New JWT token"
                            },
                            "expiresAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "summary": "Logout user",
        "description": "Invalidates the current JWT token and clears user session.\nToken will be added to blacklist to prevent reuse.\n",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "message": "Logout successful",
                  "data": {}
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    }
  },
  "components": {},
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    }
  ]
}